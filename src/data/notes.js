// src/data/notes.js
// Dados mock para as notas (blog posts)
// Este arquivo cont√©m exemplos de posts para demonstra√ß√£o

export const notes = [
  {
    id: 1,
    title: '10 Livros Que Todo Desenvolvedor Deveria Ler',
    slug: '10-livros-desenvolvedor',
    date: '2025-10-10',
    category: 'literature',
    excerpt: 'Uma sele√ß√£o de obras cl√°ssicas e modernas que moldaram minha vis√£o sobre programa√ß√£o, filosofia e vida.',
    content: `
# 10 Livros Que Todo Desenvolvedor Deveria Ler

Como desenvolvedor e amante da literatura cl√°ssica, acredito que a leitura vai muito al√©m do c√≥digo. Aqui est√° minha lista de 10 livros que moldaram minha forma de pensar e trabalhar:

## 1. **"O Programador Pragm√°tico" - Andrew Hunt e David Thomas**

Um cl√°ssico atemporal que ensina princ√≠pios fundamentais de desenvolvimento de software. Essencial para qualquer desenvolvedor que queira evoluir na carreira.

## 2. **"Clean Code" - Robert C. Martin**

Uncle Bob nos ensina a escrever c√≥digo limpo, leg√≠vel e manuten√≠vel. Um must-read para quem se preocupa com a qualidade do c√≥digo.

## 3. **"Don Quixote" - Miguel de Cervantes**

O romance de cavalaria definitivo. A hist√≥ria de um cavaleiro que luta contra moinhos de vento me inspira a enfrentar desafios imposs√≠veis com coragem e imagina√ß√£o.

## 4. **"A Divina Com√©dia" - Dante Alighieri**

Uma jornada √©pica pelo Inferno, Purgat√≥rio e Para√≠so. A obra-prima de Dante √© uma reflex√£o profunda sobre a natureza humana e a busca pela reden√ß√£o.

## 5. **"Estruturas de Dados e Algoritmos em JavaScript" - Loiane Groner**

Um guia pr√°tico e did√°tico para entender estruturas de dados e algoritmos, fundamentais para qualquer desenvolvedor.

## 6. **"O Senhor dos An√©is" - J.R.R. Tolkien**

A trilogia que definiu o g√™nero de fantasia medieval. A jornada de Frodo me ensinou sobre amizade, coragem e perseveran√ßa.

## 7. **"Refatora√ß√£o" - Martin Fowler**

Um guia essencial para melhorar o design de c√≥digo existente sem alterar seu comportamento. Fundamental para manter projetos saud√°veis.

## 8. **"Os Lus√≠adas" - Lu√≠s de Cam√µes**

A epopeia portuguesa que narra as aventuras de Vasco da Gama. Uma obra-prima da literatura cl√°ssica que celebra a coragem e a explora√ß√£o.

## 9. **"Design Patterns" - Gang of Four**

O livro que introduziu os padr√µes de design ao mundo da programa√ß√£o. Essencial para entender arquitetura de software.

## 10. **"A Odisseia" - Homero**

A jornada √©pica de Ulisses de volta para casa. Uma hist√≥ria atemporal sobre perseveran√ßa, ast√∫cia e a busca pelo lar.

---

Esses livros combinam minha paix√£o por tecnologia e literatura cl√°ssica. Cada um deles me ensinou algo valioso sobre programa√ß√£o, vida e a busca pelo conhecimento.

**E voc√™, quais livros moldaram sua jornada como desenvolvedor?**
    `,
  },
  {
    id: 2,
    title: 'Programador Pragm√°tico: O Valor de Aprender e Ter um Projeto de Vida',
    slug: 'programador-pragmatico',
    date: '2025-10-20',
    category: 'desenvolvimento',
    excerpt: 'Reflex√µes sobre aprendizado cont√≠nuo, prop√≥sito e a import√¢ncia de ter um projeto que te estimule a evoluir como desenvolvedor e como pessoa.',
    content: `
  # Programador Pragm√°tico: O Valor de Aprender e Ter um Projeto de Vida

  Antes de falar sobre programa√ß√£o, quero destacar algo essencial: **ter um projeto para a sua vida**. Algo que te estimule, que desperte curiosidade e te mantenha em movimento. Um prop√≥sito claro transforma o aprendizado em algo muito mais significativo. Quando voc√™ tem um projeto ‚Äî pessoal ou profissional ‚Äî a motiva√ß√£o surge naturalmente, e o estudo deixa de ser uma obriga√ß√£o para se tornar parte da jornada.

  ## Aprendizado Cont√≠nuo

  Gostaria de compartilhar um pouco sobre a minha trajet√≥ria na programa√ß√£o e as formas que encontrei para aprender de maneira constante. Se voc√™ √© iniciante ou um programador experiente, certamente j√° precisou revisitar conceitos b√°sicos ‚Äî seja por uma mudan√ßa na stack com que trabalha atualmente, ou simplesmente para refor√ßar os fundamentos.

  Minha jornada come√ßou com o **Tibia**, onde vi o meu primeiro script e tive o meu primeiro contato com programa√ß√£o. Por afinidade, segui naturalmente para a √°rea de **TI**. 

  Mas o prop√≥sito deste texto n√£o √© contar minha hist√≥ria, e sim compartilhar algumas formas de aprendizado que utilizo no meu dia a dia.

  ## M√©todos de Aprendizado

  Atualmente, uso **flashcards** para estudar ‚Äî com exerc√≠cios que v√£o do mais b√°sico ao mais avan√ßado, passando por vari√°veis, estruturas de dados, fun√ß√µes, classes e estruturas de repeti√ß√£o. √â claro que, no cotidiano, nem sempre usamos todas essas ‚Äúm√°gicas‚Äù, mas √© importante t√™-las no nosso arsenal. 

  Dominar a t√©cnica √© essencial. E mesmo com a ascens√£o da **IA**, compreender o contexto √© o que faz a diferen√ßa. A IA pode escrever c√≥digo, mas ela n√£o conhece o cen√°rio em que voc√™ est√° inserido ‚Äî n√£o entende as demandas do Jira, as necessidades do cliente ou a vis√£o do seu l√≠der de projeto. Por isso, **entender o porqu√™ e o contexto por tr√°s de cada linha de c√≥digo** √© o que separa um bom programador de um executor de prompts.

  ## Um Projeto Pessoal

  No final deste artigo, deixei o link para um pequeno reposit√≥rio no meu GitHub, com um projeto de **flashcards para pr√°tica de programa√ß√£o**. Voc√™ pode us√°-lo para aplicar os conceitos que aprender nos livros e cursos, e acompanhar sua pr√≥pria evolu√ß√£o.

  Ter um projeto pessoal como esse √© fundamental ‚Äî ele te desafia, te mant√©m motivado e faz com que o aprendizado tenha prop√≥sito.

  üîó **[Acesse o projeto de flashcards no GitHub](https://github.com/MatSuzart/front-end-note)**

  ## Livros Recomendados

  Esses s√£o alguns livros que considero essenciais para quem deseja fortalecer suas bases e evoluir como programador:

  - **Clean Code** ‚Äî boas pr√°ticas, estrutura de projetos e nomenclatura. Essencial para qualquer desenvolvedor.
  - **The Big Book of Small Python Projects** ‚Äî repleto de projetos pr√°ticos, simples e desafiadores. Excelente para ampliar o repert√≥rio de resolu√ß√£o de problemas.
  - **JavaScript Eloquente** ‚Äî combina teoria e pr√°tica com uma did√°tica leve e repleta de exemplos reais.
  - **Python Crash Course** ‚Äî ideal para quem est√° come√ßando ou quer refor√ßar os fundamentos de Python.
  - **Automate the Boring Stuff with Python** ‚Äî um cl√°ssico. Ensina a automatizar tarefas reais do dia a dia com c√≥digo simples e poderoso.

  Voc√™ pode usar os exerc√≠cios desses livros dentro do projeto de flashcards ‚Äî e assim criar um **arsenal te√≥rico e pr√°tico brutal**.

  ---

  **Tenha sempre um projeto, um prop√≥sito e a curiosidade viva.  
  O c√≥digo √© apenas a ferramenta ‚Äî o verdadeiro aprendizado est√° na jornada.**

  \`\`\`python
  print("bye")
  exit()
  \`\`\`
    `,
  },

  {
    id: 3,
    title: 'Bach, Beethoven e C√≥digo: A Sinergia da M√∫sica Cl√°ssica',
    slug: 'musica-classica-codigo',
    date: '2025-09-28',
    category: 'music',
    excerpt: 'Como a m√∫sica cl√°ssica influencia minha produtividade e criatividade ao programar.',
    content: `
# Bach, Beethoven e C√≥digo: A Sinergia da M√∫sica Cl√°ssica

M√∫sica cl√°ssica √© minha trilha sonora para programar. Descubra como Bach e Beethoven me ajudam a escrever c√≥digo melhor.

## Por Que M√∫sica Cl√°ssica?

A m√∫sica cl√°ssica tem uma estrutura matem√°tica e harm√¥nica que se alinha perfeitamente com a l√≥gica da programa√ß√£o. Ela me ajuda a:

- Manter o foco e a concentra√ß√£o
- Estimular a criatividade
- Reduzir o estresse e a ansiedade
- Criar um ambiente prop√≠cio para o deep work

## Minhas Composi√ß√µes Favoritas para Programar

1. **"Tocata e Fuga em R√© Menor" - Bach**: Perfeita para resolver bugs complexos
2. **"Sinfonia n¬∫ 9" - Beethoven**: Ideal para escrever c√≥digo novo e criativo
3. **"As Quatro Esta√ß√µes" - Vivaldi**: Excelente para refatora√ß√£o e limpeza de c√≥digo

---

**Experimente programar ouvindo m√∫sica cl√°ssica. Voc√™ pode se surpreender com os resultados!**
    `,
  },
  {
    id: 4,
    title: '5 Dicas para Manuten√ß√£o Preventiva de Computadores',
    slug: 'manutencao-preventiva',
    date: '2025-09-15',
    category: 'tips',
    excerpt: 'Mantenha seu computador funcionando perfeitamente com essas dicas simples e eficazes.',
    content: `
# 5 Dicas para Manuten√ß√£o Preventiva de Computadores

Como profissional de TI, vejo muitos problemas que poderiam ser evitados com manuten√ß√£o preventiva. Aqui est√£o minhas 5 dicas essenciais.

## 1. Limpeza F√≠sica Regular

Poeira √© inimiga dos computadores. Limpe ventoinhas, dissipadores e filtros a cada 3 meses.

## 2. Atualiza√ß√µes de Software

Mantenha o sistema operacional e os programas sempre atualizados para garantir seguran√ßa e desempenho.

## 3. Backup Regular

Fa√ßa backup dos seus dados importantes semanalmente. Use a regra 3-2-1: 3 c√≥pias, 2 m√≠dias diferentes, 1 off-site.

## 4. Monitoramento de Temperatura

Use ferramentas para monitorar a temperatura do processador e GPU. Temperaturas elevadas podem causar danos permanentes.

## 5. Desfragmenta√ß√£o e Limpeza de Disco

Para HDDs, desfragmente regularmente. Para SSDs, use a ferramenta de otimiza√ß√£o do sistema operacional.

---

**Manuten√ß√£o preventiva economiza tempo e dinheiro a longo prazo!**
    `,
  },
];

